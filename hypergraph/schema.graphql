# Hypergraph Schema for LinkedDao OnchainTrustNetwork

type Reviewer {
  id: ID!                    # reviewer address
  address: Bytes!            # reviewer address as bytes
  approvedAt: BigInt!        # timestamp when approved
  skillRatingsGiven: [SkillRating!]! @derivedFrom(field: "reviewer")
  sponsorships: [Sponsorship!]! @derivedFrom(field: "sponsor")
}

type SkillRating {
  id: ID!                    # transaction hash + log index
  reviewer: Reviewer!        # reviewer who gave the rating
  junior: Bytes!             # address of person being rated
  skillHash: Bytes!          # keccak256 hash of skill name
  rating: Int!               # overall rating (0-10)
  timestamp: BigInt!         # block timestamp
  blockNumber: BigInt!       # block number
  transactionHash: Bytes!    # transaction hash
}

type Sponsorship {
  id: ID!                    # transaction hash + log index
  sponsor: Reviewer!         # reviewer sponsoring the candidate
  candidate: Bytes!          # address of candidate being sponsored
  jobIdHash: Bytes!          # keccak256 hash of job id
  creditsUsed: BigInt!       # amount of credits spent
  timestamp: BigInt!         # block timestamp
  blockNumber: BigInt!       # block number
  transactionHash: Bytes!    # transaction hash
}

type Hiring {
  id: ID!                    # transaction hash + log index
  candidate: Bytes!          # address of candidate
  isHired: Boolean!          # whether candidate was hired
  timestamp: BigInt!         # hiring timestamp
  blockNumber: BigInt!       # block number
  transactionHash: Bytes!    # transaction hash
}

# Aggregate statistics (optional - can be computed from events)
type Stats {
  id: ID!                    # "global"
  totalReviewers: Int!       # count of approved reviewers
  totalRatings: Int!         # count of skill ratings
  totalSponsorships: Int!    # count of sponsorships
  totalHires: Int!           # count of successful hires
  totalCreditsSpent: BigInt! # total credits used across all sponsorships
}